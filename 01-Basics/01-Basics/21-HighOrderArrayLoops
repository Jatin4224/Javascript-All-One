//higher order array functions

// commonly seen in js
// ["","",""]
// [{},{},{}]

// const arr = [1, 2, 3, 4, 5];

// // for (const iterator of object) {
// //iterator- i,index etc , object-not js object - jis chize par loop karna h
// // }

// //forof loop
// for (const num of arr) {
//   console.log(num);
// }

// const greetings = "Hello World";
// for (const greet of greetings) {
//   console.log(`Each char is ${greet}`);
// }

// //Maps : The Map object holds key-value pairs and remembers the original insertion order of the keys. Any value (both objects and primitive values) may be used as either a key or a value.

// // const map = new Map();
// // map.set("IN", "India");
// // map.set("USA", "United states of America");
// // map.set("Fr", "France");
// // map.set("IN", "India");

// // // console.log(map);

// // for (const key of map) {
// //   console.log(key);
// // }
// // op- full array printed

// //destructing syntax

// const map = new Map();
// map.set("IN", "India");
// map.set("USA", "United states of America");
// map.set("Fr", "France");
// map.set("IN", "India");

// // console.log(map);

// for (const [key, value] of map) {
//   console.log(key, ":-", value);
// }

// //on object
// const myObject = {
//   game1: "NFS",
//   game2: "spiderman",
// };

// for (const [key, value] of myObject) {
//   console.log(key, ":-", value);
// }
//op-typeError : myObject is not iterable

//we have to use different methods in object

const myObject = {
  js: "javascript",
  cpp: "c++",
  rb: "ruby",
  swift: "swift by apple",
};

//forIn loop
for (const key in myObject) {
  console.log(`${key} shortcut is for ${myObject[key]}`);
}
// const programming = ["js", "ruby", "py", "java", "cpp"];
// for (const key in programming) {
//   console.log(key);
// }
//op- 0 1 2 3 4 // (array keys)
//we want values from keys

// const programming = ["js", "ruby", "py", "java", "cpp"];
// for (const key in programming) {
//   console.log(programming[key]);
// }
//op- js ruby py java cpp

//the loop we will used most
//forEach() loop-

// const coding = ["js", "ruby", "py", "java", "cpp"];

// coding.forEach(function (item) {
//   console.log(val);
// });

//arrow function

// coding.forEach((item) => {
//   console.log(item);
// });

// function printMe(item) {
//   console.log(item);
// }

// coding.forEach(printMe); //reference dena h

// coding.forEach((item, index, arr) => {
//   console.log(item, index, arr);
// });

const myCoding = [
  {
    languageName: "java",
    languageFIleName: "java",
  },
  {
    languageName: "java",
    languageFIleName: "java",
  },
  {
    languageName: "java",
    languageFIleName: "java",
  },
];



myCoding.forEach((item) => {
  console.log(item.languageName);
})
 
