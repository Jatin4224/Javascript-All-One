Destructuring Array Elements
If we want to assign specific array elements to other variables, the simplest way known to us right now is to access their values using their index values:

const fruits = ["Apple", "Orange", "Banana"];

const firstFruit = fruits[0];
const secondFruit = fruits[1];
const thirdFruit = fruits[2];

console.log(firstFruit);
console.log(secondFruit);
console.log(thirdFruit);

We can achieve the same result as the example given above with a shorter and more cleaner code using destructuring. Destructuring allows us to copy array elements into variables without modifying the array.

By destructuring an array, we can assign the value of each element of an array to different variables. To do that, we use the following syntax - [...] = array

Example-
const fruits = ["Apple", "Orange", "Banana"];
const [firstFruit, secondFruit, thirdFruit] = fruits;
console.log(firstFruit);
console.log(secondFruit);
console.log(thirdFruit);


Ignoring Elements
While destructuring, we might want to ignore some elements of the array.
example-
const fruits = ["Apple", "Orange", "Mango"];
const [firstFruit, , thirdFruit] = fruits;
console.log(firstFruit);
console.log(thirdFruit);


