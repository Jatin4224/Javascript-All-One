`new Map()` and `map.set()` are both related to JavaScript Maps, but they serve different purposes.

1. **`new Map()`**:
   - `new Map()` is used to create a new Map object. A Map is a built-in data structure in JavaScript that allows you to store key-value pairs, where each key can be of any data type (including objects, functions, and primitive types) and each value can be associated with a key.
   - Maps are particularly useful for scenarios where you need to maintain the order of key-value pairs, and they provide efficient methods for adding, retrieving, and deleting entries.
   - You create a new Map by calling `new Map()` and then use methods like `set()`, `get()`, `has()`, and `delete()` to work with the data within the Map.

   Example of creating a Map and using `set()`:

 
   const myMap = new Map();
   myMap.set("name", "John");
   myMap.set("age", 30);
   myMap.set("isStudent", false);

   console.log(myMap.get("name"));  // Outputs: "John"
   console.log(myMap.get("age"));   // Outputs: 30
   ```

2. **`map.set()`**:
   - `map.set()` is a method specifically used to add a key-value pair to an existing Map. It is not used to create a Map but to modify an existing one.
   - You call `set()` on a Map instance, providing a key and a value as arguments, and it adds the key-value pair to the Map.
   - If the key already exists in the Map, the `set()` method will update the associated value. If the key is not in the Map, it will be added.

   Example using `map.set()`:


   const myMap = new Map();
   myMap.set("name", "John");
   myMap.set("age", 30);

   // Adding a new key-value pair
   myMap.set("isStudent", false);

   // Updating an existing key's value
   myMap.set("age", 31);

   console.log(myMap.get("isStudent"));  // Outputs: false
   console.log(myMap.get("age"));        // Outputs: 31
   ```

In summary, `new Map()` is used to create a new Map object, while `map.set()` is a method used to add or update key-value pairs within an existing Map. Both are integral parts of working with JavaScript Maps, which are versatile for storing and managing data in a structured manner.



Fetch Data From a Map
The map.get() method returns the value of a key. We need to pass the key as argument. If the key is not present, it returns undefined
