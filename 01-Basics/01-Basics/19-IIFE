//immediately invoked function expression(IIFE)
// An IIFE (Immediately Invoked Function Expression) is a JavaScript function that runs as soon as it is defined
// Use cases
// Avoid polluting the global namespace
// Because our application could include many functions and global variables from different source files, it's important to limit the number of global variables. If we have some initiation code that we don't need to use again, we could use the IIFE pattern. As we will not reuse the code again, using IIFE in this case is better than using a function declaration or a function expression.

// Execute an async function
//   An async IIFE allows you to use await and for-await even in older browsers and JavaScript runtimes that have no top - level await

//tell ineterviewer all this that sometimes we have problem for global scope pullution to remove this we use iife function.
syntax -
  // ()() - first one for function defination and secomd one is for execution call 

  
example-

  (function chai() {
    //names IIFE
    console.log(`Db connected`)

  })();
//op- Db connected 


//arrow function 
(() => {
  //unkown IIFE
  console.log(`Db connected Two`);
})()

//suppose this console log expects variable 

((name) => {
  console.log(`Db connected Two ${name}`);
})('jatin')


imp-interview question write two IIFE

(function chai() {
  //names IIFE
  console.log(`Db connected`)

})()
//op- Db connected 


//arrow function 
(() => {
//unkown IIFE
console.log(`Db connected Two`);
})()

very imp remember - op- error but this error is showing because of only ; we have to put ; at the end of the first IIFE .dont to this mistake 
  (function chai() {
    //names IIFE
    console.log(`Db connected`)

  })();
